@import './var';
.fs(@px) {
  font-size: unit(@px * @dpr / @html_size, rem);
}
.w(@px) {
  width: unit(@px*@dpr/@html_size, rem);
}
.h(@px) {
  height: unit(@px*@dpr/@html_size, rem);
}
.lh(@px) {
  line-height: unit(@px*@dpr/@html_size, rem);
}
.mg(@all) {
  margin:unit(@all*@dpr/@html_size, rem);
}
.mg-top-left(@top_and_bottom, @right_and_left) {
  margin: unit(@top_and_bottom*@dpr/@html_size, rem) unit(@right_and_left*@dpr/@html_size, rem);
}
.m-t(@px) {
  margin-top: unit(@px*@dpr/@html_size, rem);
}
.m-r(@px) {
  margin-right: unit(@px*@dpr/@html_size, rem);
}
.m-b(@px) {
  margin-bottom: unit(@px*@dpr/@html_size, rem);
}
.m-l(@px) {
  margin-left: unit(@px*@dpr/@html_size, rem);
}
.pd(@all) {
  padding:unit(@all*@dpr/@html_size, rem);
}
.pd-top-left (@top_and_bottom, @right_and_left) {
  padding: unit(@top_and_bottom*@dpr/@html_size, rem) unit(@right_and_left*@dpr/@html_size, rem);
}
.p-t(@px) {
  padding-top: unit(@px*@dpr/@html_size, rem);
}
.p-r(@px) {
  padding-right: unit(@px*@dpr/@html_size, rem);
}
.p-b(@px) {
  padding-bottom: unit(@px*@dpr/@html_size, rem);
}
.p-l(@px) {
  padding-left: unit(@px*@dpr/@html_size, rem);
}
.left(@px){
  left: unit(@px*@dpr/@html_size, rem);
}
.right(@px){
  right: unit(@px*@dpr/@html_size, rem);
}
.flexbox() {
  display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox;      /* TWEENER - IE 10 */
  display: -webkit-flex;
  display: flex!important;
}
.justify-content(@jc) when (@jc = flex-start) {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}
.justify-content(@jc) when (@jc = flex-end) {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}
.justify-content(@jc) when (@jc = space-between) {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}
.justify-content(@jc) when not (@jc = flex-start) and not (@jc = flex-end) and not (@jc = space-between) {
  -webkit-box-pack: @jc;
  -ms-flex-pack: @jc;
  -webkit-justify-content: @jc;
  justify-content: @jc;
}
.align-items(@ai) when (@ai = flex-start) {
  -webkit-box-align: start;
  -ms-flex-align: start;
  -webkit-align-items: flex-start;
  align-items: flex-start;
}
.align-items(@ai) when (@ai = flex-end) {
  -webkit-box-align: end;
  -ms-flex-align: end;
  -webkit-align-items: flex-end;
  align-items: flex-end;
}
.align-items(@ai) when not (@ai = flex-start) and not (@ai = flex-end) {
  -webkit-box-align: @ai;
  -ms-flex-align: @ai;
  -webkit-align-items: @ai;
  align-items: @ai;
}


















































